specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: OrderManager
    network: arbitrum-one
    source:
      abi: OrderManager
      address: '0x2215298606C9D0274527b13519Ec50c3A7f1c1eF'
      startBlock: 99334388
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Order
        - SwapOrder
      abis:
        - name: OrderManager
          file: ./abis/OrderManager.json
      eventHandlers:
        - event: LeverageOrderPlaced(indexed uint256,(address,address,address,uint8,bool,address,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint8,uint8))
          handler: handlePerpOrderPlaced
        - event: LeverageOrderCancelled(indexed uint256)
          handler: handlePerpOrderCancelled
        - event:  LeverageOrderExpired(indexed uint256)
          handler: handlePerpOrderExpired
        - event:  LeverageOrderExecuted(indexed uint256,(address,address,address,uint8,bool,address,uint256,uint256,uint256,uint256,uint256),(uint256,uint256,uint8,uint8),uint256)
          handler: handlePerpOrderExecuted
        - event: SwapOrderPlaced(indexed uint256,(address,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256))
          handler: handleSwapOrderPlaced
        - event: SwapOrderCancelled(indexed uint256)
          handler: handleSwapOrderCancelled
        - event: SwapOrderExecuted(indexed uint256,uint256,uint256)
          handler: handleSwapOrderExecuted
      file: src/orders.ts

  - kind: ethereum
    name: Pool
    network: arbitrum-one
    source:
      abi: Pool
      address: '0x32B7bF19cb8b95C27E644183837813d4b595dcc6'
      startBlock: 99333260
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Position
      abis:
        - name: Pool
          file: ./abis/Pool.json
      eventHandlers:
        # indexed events 
        - event: IncreasePosition(indexed bytes32,address,address,address,uint256,uint256,uint8,uint256,uint256)
          handler: handleIncreasePosition
        - event: ClosePosition(indexed bytes32,uint256,uint256,uint256,uint256,uint256)
          handler: handleClosePosition
        - event: LiquidatePosition(indexed bytes32,address,address,address,uint8,uint256,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
      file: src/positions.ts
